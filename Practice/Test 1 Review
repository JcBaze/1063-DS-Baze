3)
int *A = new int[size];

4)
int **B = new int *[x];
	for (int i=0; i<y; i++)
	{
		B[i] = new int [y];
	}
	
5)
int sumArray(int A[], int size)
{
	int sum = 0;
	for (int i = 0; i < size; i++)
	{
		sum += A[i];
	}
	return sum;
}

6)
int sumArray(int A[], int size)
{
	int smallest = A[0];
	for (int i = 1; i < size; i++)
	{
		if (A[i] < smallest)
		{
			smallest = A[i];
		}
	}
	return smallest;
}

7)
void evenSum(int A[], int size)
{
	int sum = 0;
	for (int i = 0; i < size; i+=2)
	{
		sum += A[i];
	}
}

8)
void copyArray(int A[10], int B[10])
{
	for (int i = 0; i < 10; i++)
	{
		B[i] = A[i];
	}
}

9)
void reverseArray(int A[], int B[], int size)
{
	for (int i = 0, j = size - 1; i < size; i++, j--) 
	{
		B[j] = A[i];
	}
}

10)
void readArray(int A[], int size)
{
	ifstream infile;
	infile.open("numbers.txt");
	for (int i = 0; i < size; i++)
	{
		infile >> A[i];
	}
}

11)
Stats Cals(int A[], int size)
{
	Stats S;

	int     min = A[0];
	int     max = A[0];
	double  avg = 0.0;
	double  total = 0;

	for (int i = 0; i<size; i++) 
	{
		
		if (A[i]<min) 
		{
			min = A[i];
		}
	
		if (A[i]>max) 
		{
			max = A[i];
		}
		
		total += A[i];
	}
	
	S.min = min;
	S.max = max;
	S.avg = total / (double)size;

	return S;
}

12)
